{"version":3,"sources":["components/CookieNotice/index.tsx","components/CookieNotice/constants.ts","components/Kalovelogo/index.tsx","components/Footer/index.tsx","static/defaultImage.png","contexts/Image/constants.ts","contexts/Image/reducer.ts","contexts/Image/index.tsx","components/ImagePicker/constants.ts","components/ImagePicker/index.tsx","components/DimensionPicker/constants.ts","contexts/Dimensions/constants.ts","contexts/Dimensions/reducer.ts","contexts/Dimensions/index.tsx","utils/save/index.ts","components/ScreenshotCTA/index.tsx","components/ScreenshotCTA/constants.ts","contexts/Background/constants.ts","contexts/Background/reducer.ts","contexts/Background/index.tsx","contexts/Device/constants.ts","contexts/Device/reducer.ts","contexts/Device/index.tsx","contexts/Shadow/constants.ts","contexts/Shadow/reducer.ts","contexts/Shadow/index.tsx","components/ColorModeSwitcher.tsx","components/Header.tsx","components/BrowserWindow/index.tsx","components/BrowserWindow/constants.ts","utils/colors/index.ts","containers/DeviceWrapper/index.tsx","utils/resizers/index.ts","containers/Foreground/index.tsx","components/ColorPicker/index.tsx","containers/ColorPickWrapper/index.tsx","components/BackgroundPicker/UiGradientsLogo.tsx","components/BackgroundPicker/PreBuiltPicker.tsx","components/BackgroundPicker/utils.ts","components/BackgroundPicker/index.tsx","components/WrapRadio/index.tsx","containers/StackRadioGroup/index.tsx","components/DevicePicker/index.tsx","components/DevicePicker/constants.ts","utils/validation/index.ts","components/DimensionPicker/utils.ts","components/DimensionPicker/index.tsx","components/ShadowPicker/index.tsx","components/ShadowPicker/constants.ts","containers/Toolbox/index.tsx","containers/Toolbox/constants.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["CookieNotice","useCookies","cookies","setCookie","React","useState","open","setOpen","background","useColorModeValue","foreground","iconColor","unmountOnExit","in","position","bottom","m","alignItems","gridGap","borderRadius","p","color","bg","fontSize","variant","aria-label","onClick","expiration","Date","setTime","getTime","path","expires","colorScheme","icon","Svg","styled","Kalovelogo","css","xmlns","xmlnsXlink","viewBox","id","d","xlinkHref","Footer","marginTop","justifyContent","alignSelf","justifySelf","w","_hover","textDecor","display","href","target","rel","SET_IMAGE","imageReducer","state","action","type","payload","Error","ImageContext","createContext","undefined","ImageProvider","children","useReducer","defaultImage","providerProps","image","dispatch","Provider","value","useImage","context","useContext","ALLOWED_FILE_TYPES","ImagePicker","inputRef","useRef","uploadFile","e","a","files","length","includes","url","URL","createObjectURL","alert","current","click","ref","htmlFor","onChange","hidden","memo","TWITTER_POST_TITLE","TWITTER_POST_SIZE","x","y","INSTAGRAM_POST_TITLE","INSTAGRAM_POST_SIZE","INSTAGRAM_STORY_TITLE","INSTAGRAM_STORY_SIZE","ORIGINAL_SIZE_TITLE","CHANGE_RESOLUTION","CHANGE_SCALE","CHANGE_WIDTH","CHANGE_HEIGHT","dimensionsReducer","newDimensions","resolution","scale","DimensionsContext","DimensionsProvider","defaultDimensions","dimensions","useDimensions","saveAs","uri","filename","link","document","createElement","download","body","appendChild","removeChild","window","ScreenshotCTA","screenshotRef","dimensionsContext","width","height","toPng","pixelRatio","canvasWidth","canvasHeight","then","canvas","CHANGE_COLORS","CHANGE_DIRECTION","backgroundReducer","newBackground","colors","direction","BackgroundContext","BackgroundProvider","useBackground","BEZEL","BROWSER","NONE","CHANGE_TYPE","TOGGLE_STEALTH_BUTTONS","TOGGLE_URL_BAR","TOGGLE_DARK_MODE","TOGGLE_BURGER","CHANGE_URL","CHANGE_BEZEL_COLOR","deviceReducer","newDevice","options","isBurgerHidden","isDark","isStealth","isBarHidden","DeviceContext","DeviceProvider","defaultState","title","device","useDevice","CHANGE_X","CHANGE_Y","CHANGE_BLUR","CHANGE_COLOR","CHANGE_SPREAD","shadowReducer","newShadow","blur","spread","ShadowContext","ShadowProvider","shadow","useShadow","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","textAlign","marginLeft","Header","paddingBottom","as","fontFamily","BrowserWindow","className","style","defaultValue","generateGradient","reducer","accumulator","currentValue","gradient","reduce","formatRGBA","rgb","r","g","b","toString","_componentToHex","c","hex","parseInt","formatHEX","split","map","replace","DeviceWrapper","deviceContext","imageStyles","setimageStyles","imageRef","useEffect","border","alt","boxShadow","generateShadow","maxWidth","maxHeight","src","resolutionDivider","max","innerWidth","innerHeight","Math","scaleDivider","min","Foreground","backgroundContext","imageContext","useMediaQuery","imageDimensions","h","imageScale","flexDirection","top","data-testid","transition","overflow","bgGradient","flexDir","transform","ColorPicker","callback","fontWeight","paddingY","paddingLeft","paddingRight","ColorPickWrapper","total","templateColumns","flexWrap","Array","fill","index","formattedColor","newColors","handleChange","UiGradientsLogo","colorMode","fillRule","PrebuiltPicker","useDisclosure","isOpen","onOpen","onClose","currentPage","setcurrentPage","colorsPerPage","useBreakpointValue","base","md","lg","totalPages","floor","gradients","size","gridTemplateColumns","slice","name","whiteSpace","isDisabled","directions","rotate","lastValue","currentDirection","indexOf","BackgroundPicker","marginRight","pop","WrapRadio","radioProps","tooltip","useRadio","getInputProps","getCheckboxProps","input","checkbox","label","maxW","cursor","borderWidth","_checked","borderColor","_focus","px","py","StackRadioGroup","styles","testId","useRadioGroup","getRootProps","getRadioProps","group","wordBreak","option","radio","FiCircle","GoBrowser","AiOutlineMobile","DevicePicker","browserOptions","switches","nextValue","browserOption","defaultIsChecked","checked","gridColumn","placeholder","changeBezelColor","parseNumberInput","val","result","getUploadedImageDimensions","Promise","resolve","img","Image","onload","remove","DimensionPicker","setScale","round","resolutionItems","rightLabel","gridRow","inputMode","ShadowPicker","gridItems","marginY","changeColor","Toolbox","pickers","component","defaultIndex","allowMultiple","picker","flex","pb","theme","extendTheme","config","initialColorMode","useSystemColorMode","fonts","heading","Loading","override","left","loading","App","showLoader","setShowLoader","setTimeout","gridTemplateRows","minH","gap","xl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.deb269a3.chunk.js","sourcesContent":["import {\n  Fade,\n  Flex,\n  IconButton,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { BsCheck } from \"react-icons/bs\";\nimport { COOKIE_NOTICE_TEXT } from \"./constants\";\n\nconst CookieNotice = (): JSX.Element => {\n  const [cookies, setCookie] = useCookies([\"hide_cookie_notice\"]);\n  const [open, setOpen] = React.useState(!cookies[\"hide_cookie_notice\"]);\n\n  const handleClose = () => {\n    const expiration = new Date();\n    expiration.setTime(expiration.getTime() + 1000 * 60 * 24 * 30);\n    setCookie(\"hide_cookie_notice\", \"1\", { path: \"/\", expires: expiration });\n    setOpen(false);\n  };\n\n  const background = useColorModeValue(\"blackAlpha.800\", \"whiteAlpha.800\");\n  const foreground = useColorModeValue(\"whiteAlpha.800\", \"blackAlpha.800\");\n  const iconColor = useColorModeValue(\"whiteAlpha\", \"black\");\n\n  return (\n    <Fade unmountOnExit in={open}>\n      <Flex\n        position=\"fixed\"\n        bottom=\"0\"\n        m=\"10px\"\n        alignItems=\"center\"\n        gridGap=\"5\"\n        borderRadius=\"5\"\n        p=\"3\"\n        color={foreground}\n        bg={background}\n      >\n        <Text>{COOKIE_NOTICE_TEXT}</Text>\n        <IconButton\n          fontSize=\"md\"\n          variant=\"outline\"\n          borderRadius=\"50%\"\n          aria-label=\"Close cookie notice\"\n          onClick={handleClose}\n          colorScheme={iconColor}\n          icon={<BsCheck />}\n        />\n      </Flex>\n    </Fade>\n  );\n};\nexport default CookieNotice;\n","export const COOKIE_NOTICE_TEXT =\n  \"🍪 powered by the privacy-focused GoSquared platform!\";\n","import React from \"react\";\nimport { styled, useColorModeValue } from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\n\nconst Svg = styled(\"svg\");\n\nconst Kalovelogo = (): JSX.Element => {\n  css();\n  return (\n    <Svg\n      css={css`\n        transition: all 0.5s;\n        fill: ${useColorModeValue(\"#696969\", \"#ccc\")};\n      `}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"234.464 236.489 199.028 183.621\"\n    >\n      <defs></defs>\n      <defs>\n        <path\n          id=\"a\"\n          d=\"M418.85 271.06c-6.12-11.03-14.83-20.59-25.22-27.45-.29-.19-.57-.37-.84-.46-.47-.37-.93-.65-1.4-.93a40.868 40.868 0 00-5.09-2.88c-.1-.09-.19-.09-.29-.09-1.02-.37-2.03-.74-3.06-.93-.54-.18-1.11-.27-1.66-.37-.83-.18-1.57-.28-2.41-.37-.66-.09-1.4-.09-2.05-.09-.83 0-1.67 0-2.49.09-12.63 1.3-22.55 11.87-22.55 24.86 0 2.32.37 4.54.93 6.68.28.83.55 1.67.83 2.41.09.09.09.28.19.37.47.93.92 1.85 1.39 2.69.19.46.46.93.74 1.39.09.09.19.19.29.37.27.37.45.74.74 1.02.37.46.74.93 1.11 1.39 1.48 2.04 3.05 3.62 4.82 5.2 4.82 4.73 9.46 9.27 13.73 14.37 4.17 5.01 8.16 10.58 10.57 17.16 2.5 6.4 3.24 13.63 2.78 20.87-.92 14.28-7.7 29.03-19.29 40.07-11.6 11.03-27.63 18.08-44.52 19.2-16.88 1.11-34.5-2.79-48.97-12.62-14.66-9.46-25.97-24.39-30.61-41.74-4.55-17.34-2.6-36.72 6.49-52.95 8.82-16.33 24.02-29.22 41.66-36.36.26-.19.45-.47.37-.84-.11-.37-.48-.55-.85-.37-18.27 6.03-35.05 18.09-45.63 34.88-5.38 8.34-9.37 17.62-11.49 27.54a84.81 84.81 0 00-.47 30.24c3.62 20.12 15.02 38.95 31.25 52.12 16.14 13.45 37.19 20.78 58.54 21.52 21.41.74 43.39-5.47 62.03-18.09 18.55-12.52 33.3-32.46 39.15-55.83 2.96-11.69 3.61-23.93 2.22-36.27-1.48-12.24-4.82-24.67-10.94-35.8z\"\n        ></path>\n      </defs>\n      <use xlinkHref=\"#a\"></use>\n    </Svg>\n  );\n};\nexport default Kalovelogo;\n","import { Flex } from \"@chakra-ui/layout\";\nimport { Box, Link, useColorModeValue } from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport Kalovelogo from \"components/Kalovelogo\";\nimport React from \"react\";\n\nconst Footer = (): JSX.Element => (\n  <Flex\n    fontSize=\"md\"\n    marginTop=\"70px\"\n    gridGap=\"2\"\n    justifyContent=\"center\"\n    alignSelf=\"flex-end\"\n    justifySelf=\"flex-end\"\n    w=\"100%\"\n  >\n    <Link\n      color={useColorModeValue(\"blackAlpha.700\", \"whiteAlpha.700\")}\n      _hover={{\n        textDecor: \"none\",\n        color: useColorModeValue(\"blackAlpha.900\", \"whiteAlpha.900\"),\n      }}\n      css={css`\n        :hover * {\n          transition: all 0.5s;\n          fill: ${useColorModeValue(\"#000\", \"#fff\")};\n        }\n      `}\n      alignItems=\"center\"\n      gridGap=\"2\"\n      display=\"flex\"\n      href=\"https://kalovelo.com\"\n      target=\"_blank\"\n      rel=\"noopener\"\n    >\n      crafted by\n      <Box w=\"5\">\n        <Kalovelogo />\n      </Box>\n      Kalovelo\n    </Link>\n  </Flex>\n);\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/defaultImage.9282a3ad.png\";","export const SET_IMAGE = \"Set Image\";\n","import { SET_IMAGE } from \"./constants\";\nimport { Action } from \"./types\";\n\nexport function imageReducer(state: string, action: Action): string {\n  switch (action.type) {\n    case SET_IMAGE: {\n      return action.payload;\n    }\n    default: {\n      throw new Error(`Unhandled action at ImagePicker`);\n    }\n  }\n}\n","import React, { createContext } from \"react\";\nimport defaultImage from \"static/defaultImage.png\";\nimport { imageReducer } from \"./reducer\";\nimport { Action } from \"./types\";\n\ntype ImageContextType = {\n  image: string;\n  dispatch: React.Dispatch<Action>;\n};\n\nconst ImageContext = createContext<ImageContextType | undefined>(undefined);\n\nexport const ImageProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element => {\n  const [image, dispatch] = React.useReducer(imageReducer, defaultImage);\n\n  const providerProps = { image, dispatch };\n\n  return (\n    <ImageContext.Provider value={providerProps}>\n      {children}\n    </ImageContext.Provider>\n  );\n};\n\nexport function useImage(): ImageContextType {\n  const context = React.useContext(ImageContext);\n  if (context === undefined) {\n    throw new Error(\"useImage must be used within ImageProvider\");\n  }\n\n  return context;\n}\n","export const CTA_TEXT = \"Set Image\";\nexport const WRONG_FILE_TYPE_ALERT = \"That's not an Image 😠 Try again!\";\n","import { Button } from \"@chakra-ui/react\";\nimport { useImage } from \"contexts/Image\";\nimport { SET_IMAGE } from \"contexts/Image/constants\";\nimport React from \"react\";\nimport { CTA_TEXT, WRONG_FILE_TYPE_ALERT } from \"./constants\";\n\nconst ALLOWED_FILE_TYPES = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n\nconst ImagePicker = (): JSX.Element => {\n  const context = useImage();\n  const inputRef = React.useRef<HTMLLabelElement>(null);\n\n  const triggerUploadFile = () => inputRef.current?.click();\n\n  const uploadFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n\n    if (files?.length && ALLOWED_FILE_TYPES.includes(files[0].type)) {\n      const url = URL.createObjectURL(files[0]);\n      context.dispatch({ type: SET_IMAGE, payload: url });\n    } else alert(WRONG_FILE_TYPE_ALERT);\n  };\n\n  return (\n    <>\n      <Button\n        aria-label=\"Upload file\"\n        w=\"100%\"\n        onClick={triggerUploadFile}\n        variant=\"outline\"\n      >\n        <label ref={inputRef} htmlFor=\"upload\">\n          {CTA_TEXT}\n        </label>\n      </Button>\n      <input type=\"file\" id=\"upload\" onChange={uploadFile} hidden />\n    </>\n  );\n};\n\nexport default React.memo(ImagePicker);\n","export type Option_Type = { value: string; label: JSX.Element | string };\n\nexport type Item = {\n  label: string;\n  callback: (val: number) => void;\n  value: number;\n  tooltip: string;\n  min?: number;\n  max?: number;\n  rightLabel?: string;\n};\n\nexport const TWITTER_POST_TITLE = \"Twitter post\";\nexport const TWITTER_POST_SIZE = { x: 1200, y: 630 };\n\nexport const INSTAGRAM_POST_TITLE = \"Instagram post\";\nexport const INSTAGRAM_POST_SIZE = { x: 1080, y: 1080 };\n\nexport const INSTAGRAM_STORY_TITLE = \"Instagram story\";\nexport const INSTAGRAM_STORY_SIZE = { x: 1080, y: 1920 };\n\nexport const ORIGINAL_SIZE_TITLE = \"Original Size\";\n\nexport const SCALE_LABEL = \"Scale:\";\nexport const SCALE_TOOLTIP = \"Value between [0,100]\";\nexport const SCALE_RIGHT_LABEL = \"%\";\n\nexport const WIDTH_LABEL = \"Width:\";\nexport const WIDTH_TOOLTIP = \"Width Value is in px.\";\nexport const WIDTH_RIGHT_LABEL = \"px\";\n\nexport const HEIGHT_LABEL = \"Height:\";\nexport const HEIGHT_TOOLTIP = \"Height Value is in px.\";\nexport const HEIGHT_RIGHT_LABEL = \"px\";\n\nexport const PREBUILT_DIMENSIONS_TEST_ID = \"Prebuilt Dimensions\";\n","export const CHANGE_RESOLUTION = \"Change resolution\";\nexport const CHANGE_SCALE = \"Change scale\";\nexport const CHANGE_WIDTH = \"Change width\";\nexport const CHANGE_HEIGHT = \"Change height\";\n","import {\n  CHANGE_HEIGHT,\n  CHANGE_RESOLUTION,\n  CHANGE_SCALE,\n  CHANGE_WIDTH,\n} from \"./constants\";\nimport { Action, Dimensions } from \"./types\";\n\nexport function dimensionsReducer(\n  state: Dimensions,\n  action: Action\n): Dimensions {\n  const newDimensions: Dimensions = { ...state };\n  switch (action.type) {\n    case CHANGE_RESOLUTION: {\n      newDimensions.resolution = action.payload;\n      return newDimensions;\n    }\n    case CHANGE_WIDTH: {\n      newDimensions.resolution.x = action.payload;\n      return newDimensions;\n    }\n    case CHANGE_HEIGHT: {\n      newDimensions.resolution.y = action.payload;\n      return newDimensions;\n    }\n    case CHANGE_SCALE: {\n      newDimensions.scale = action.payload;\n      return newDimensions;\n    }\n    default: {\n      throw new Error(`Unhandled action at DimensionsPicker`);\n    }\n  }\n}\n","import { TWITTER_POST_SIZE } from \"components/DimensionPicker/constants\";\nimport React, { createContext } from \"react\";\nimport { dimensionsReducer } from \"./reducer\";\nimport { Action, Dimensions } from \"./types\";\n\ntype DimensionsContextType = {\n  dimensions: Dimensions;\n  dispatch: React.Dispatch<Action>;\n};\n\nconst DimensionsContext = createContext<DimensionsContextType | undefined>(\n  undefined\n);\n\nexport const DimensionsProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element => {\n  const defaultDimensions: Dimensions = {\n    scale: 1,\n    resolution: TWITTER_POST_SIZE,\n  };\n  const [dimensions, dispatch] = React.useReducer(\n    dimensionsReducer,\n    defaultDimensions\n  );\n\n  const providerProps = { dimensions, dispatch };\n\n  return (\n    <DimensionsContext.Provider value={providerProps}>\n      {children}\n    </DimensionsContext.Provider>\n  );\n};\n\nexport function useDimensions(): DimensionsContextType {\n  const context = React.useContext(DimensionsContext);\n  if (context === undefined) {\n    throw new Error(\"useDimensions must be used within DimensionsProvider\");\n  }\n\n  return context;\n}\n","export const saveAs = async (uri: string, filename: string): Promise<void> => {\n  const link = document.createElement(\"a\");\n\n  if (typeof link.download === \"string\") {\n    link.href = uri;\n    link.download = filename;\n\n    //Firefox requires the link to be in the body\n    document.body.appendChild(link);\n\n    //simulate click\n    link.click();\n\n    //remove the link when done\n    document.body.removeChild(link);\n  } else {\n    window.open(uri);\n  }\n};\n","import { Button } from \"@chakra-ui/react\";\nimport { useDimensions } from \"contexts/Dimensions\";\nimport { toPng } from \"html-to-image\";\nimport React from \"react\";\nimport { saveAs } from \"utils/save\";\nimport { DOWNLOAD_TEXT } from \"./constants\";\n\ntype ScreenshotCTAProps = {\n  screenshotRef: React.RefObject<HTMLDivElement>;\n};\n\nconst ScreenshotCTA = ({ screenshotRef }: ScreenshotCTAProps): JSX.Element => {\n  const dimensionsContext = useDimensions();\n\n  const width: number = dimensionsContext.dimensions.resolution?.x || 0;\n  const height: number = dimensionsContext.dimensions.resolution?.y || 0;\n\n  const screenshot = () => {\n    if (screenshotRef.current)\n      toPng(screenshotRef.current, {\n        pixelRatio: 1,\n        canvasWidth: width,\n        canvasHeight: height,\n      }).then((canvas) => {\n        return saveAs(canvas, \"mokkup.png\");\n      });\n  };\n  return (\n    <Button\n      aria-label=\"Download image\"\n      w=\"100%\"\n      onClick={screenshot}\n      variant=\"outline\"\n      colorScheme=\"purple\"\n    >\n      <label htmlFor=\"donwload\">{DOWNLOAD_TEXT}</label>\n    </Button>\n  );\n};\n\nexport default ScreenshotCTA;\n","export const DOWNLOAD_TEXT = \"Download image!\";\n","export const CHANGE_COLORS = \"CHANGE COLORS\";\nexport const CHANGE_DIRECTION = \"CHANGE DIRECTION\";\nexport const CHANGE_BACKGROUND = \"CHANGE BACKGROUND\";\n","import {\n  CHANGE_BACKGROUND,\n  CHANGE_COLORS,\n  CHANGE_DIRECTION,\n} from \"./constants\";\nimport { Action, Background } from \"./types\";\n\nexport function backgroundReducer(\n  state: Background,\n  action: Action\n): Background {\n  const newBackground: Background = { ...state };\n  switch (action.type) {\n    case CHANGE_COLORS: {\n      newBackground.colors = action.payload;\n      return newBackground;\n    }\n    case CHANGE_DIRECTION: {\n      newBackground.direction = action.payload;\n      return newBackground;\n    }\n    case CHANGE_BACKGROUND: {\n      return action.payload;\n    }\n    default: {\n      throw new Error(`Unhandled action at BackgroundReducer`);\n    }\n  }\n}\n","import React, { createContext } from \"react\";\nimport { backgroundReducer } from \"./reducer\";\nimport { Background, Action } from \"./types\";\n\ntype BackgroundContextType = {\n  background: Background;\n  dispatch: React.Dispatch<Action>;\n};\n\nconst BackgroundContext = createContext<BackgroundContextType | undefined>(\n  undefined\n);\n\ntype BackgroundProviderType = {\n  children: React.ReactNode;\n};\nexport const BackgroundProvider = ({\n  children,\n}: BackgroundProviderType): JSX.Element => {\n  const [background, dispatch] = React.useReducer(backgroundReducer, {\n    colors: [\"#536976\", \"#292E49\"],\n    direction: \"to-r\",\n  });\n\n  const providerProps = { background, dispatch };\n\n  return (\n    <BackgroundContext.Provider value={providerProps}>\n      {children}\n    </BackgroundContext.Provider>\n  );\n};\n\nexport function useBackground(): BackgroundContextType {\n  const context = React.useContext(BackgroundContext);\n  if (context === undefined) {\n    throw new Error(\"useBackground must be used within a BackgroundProvider\");\n  }\n\n  return context;\n}\n","export const BEZEL = \"Bezel\";\nexport const BROWSER = \"Browser\";\nexport const NONE = \"None\";\n\nexport const CHANGE_TYPE = \"Change type\";\nexport const TOGGLE_STEALTH_BUTTONS = \"Toggle stealth button\";\nexport const TOGGLE_URL_BAR = \"Toggle URL bar\";\nexport const TOGGLE_DARK_MODE = \"Toggle Dark mode\";\nexport const TOGGLE_BURGER = \"Toggle Burger\";\nexport const CHANGE_URL = \"Change URL\";\n\nexport const CHANGE_BEZEL_COLOR = \"Change bezel color\";\n","import {\n  CHANGE_BEZEL_COLOR,\n  CHANGE_TYPE,\n  CHANGE_URL,\n  TOGGLE_BURGER,\n  TOGGLE_DARK_MODE,\n  TOGGLE_STEALTH_BUTTONS,\n  TOGGLE_URL_BAR,\n} from \"./constants\";\nimport { Action, BezelOptions, BrowserOptions, Device } from \"./types\";\n\nexport function deviceReducer(state: Device, action: Action): Device {\n  const newDevice: Device = { ...state };\n  switch (action.type) {\n    case CHANGE_TYPE: {\n      return action.payload;\n    }\n    case TOGGLE_BURGER: {\n      (newDevice.options as BrowserOptions).isBurgerHidden = !(\n        state.options as BrowserOptions\n      ).isBurgerHidden;\n      return newDevice;\n    }\n    case TOGGLE_DARK_MODE: {\n      (newDevice.options as BrowserOptions).isDark = !(\n        state.options as BrowserOptions\n      ).isDark;\n      return newDevice;\n    }\n    case TOGGLE_STEALTH_BUTTONS: {\n      (newDevice.options as BrowserOptions).isStealth = !(\n        state.options as BrowserOptions\n      ).isStealth;\n      return newDevice;\n    }\n    case TOGGLE_URL_BAR: {\n      (newDevice.options as BrowserOptions).isBarHidden = !(\n        state.options as BrowserOptions\n      ).isBarHidden;\n      return newDevice;\n    }\n    case CHANGE_URL: {\n      (newDevice.options as BrowserOptions).url = action.payload;\n      return newDevice;\n    }\n    case CHANGE_BEZEL_COLOR: {\n      (newDevice.options as BezelOptions).color = action.payload;\n      return newDevice;\n    }\n    default: {\n      throw new Error(`Unhandled action at DeviceReducer`);\n    }\n  }\n}\n","import React, { createContext } from \"react\";\nimport { BROWSER } from \"./constants\";\nimport { deviceReducer } from \"./reducer\";\nimport { Action, Device } from \"./types\";\n\ntype DeviceContextType = {\n  device: Device;\n  dispatch: React.Dispatch<Action>;\n};\nconst DeviceContext = createContext<DeviceContextType | undefined>(undefined);\n\nexport const DeviceProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element => {\n  const defaultState: Device = {\n    title: BROWSER,\n    options: {\n      isDark: true,\n      isStealth: true,\n      isBarHidden: false,\n      isBurgerHidden: false,\n      url: \"https://totally-not-a-coolors-knock-off.com\",\n    },\n  };\n\n  const [device, dispatch] = React.useReducer(deviceReducer, defaultState);\n\n  const providerProps = { device, dispatch };\n\n  return (\n    <DeviceContext.Provider value={providerProps}>\n      {children}\n    </DeviceContext.Provider>\n  );\n};\n\nexport function useDevice(): DeviceContextType {\n  const context = React.useContext(DeviceContext);\n  if (context === undefined) {\n    throw new Error(\"useDevice must be used within a DeviceProvider\");\n  }\n\n  return context;\n}\n","export const CHANGE_X = \"Change X\";\nexport const CHANGE_Y = \"Change Y\";\nexport const CHANGE_BLUR = \"Change Blur\";\nexport const CHANGE_COLOR = \"Change Color\";\nexport const CHANGE_SPREAD = \"Change Spread\";\n","import {\n  CHANGE_BLUR,\n  CHANGE_COLOR,\n  CHANGE_SPREAD,\n  CHANGE_X,\n  CHANGE_Y,\n} from \"./constants\";\nimport { Action, Shadow } from \"./types\";\n\nexport function shadowReducer(state: Shadow, action: Action): Shadow {\n  const newShadow: Shadow = { ...state };\n  switch (action.type) {\n    case CHANGE_X: {\n      newShadow.x = action.payload;\n      return newShadow;\n    }\n    case CHANGE_Y: {\n      newShadow.y = action.payload;\n      return newShadow;\n    }\n    case CHANGE_BLUR: {\n      newShadow.blur = action.payload;\n      return newShadow;\n    }\n    case CHANGE_SPREAD: {\n      newShadow.spread = action.payload;\n      return newShadow;\n    }\n    case CHANGE_COLOR: {\n      newShadow.color = action.payload;\n      return newShadow;\n    }\n    default: {\n      throw new Error(`Unhandled action at DimensionsPicker`);\n    }\n  }\n}\n","import React, { createContext } from \"react\";\nimport { shadowReducer } from \"./reducer\";\nimport { Action, Shadow } from \"./types\";\n\ntype ShadowContextType = {\n  shadow: Shadow;\n  dispatch: React.Dispatch<Action>;\n};\n\nconst ShadowContext = createContext<ShadowContextType | undefined>(undefined);\n\nexport const ShadowProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element => {\n  const [shadow, dispatch] = React.useReducer(shadowReducer, {\n    x: 0,\n    y: 0,\n    blur: 55,\n    spread: 5,\n    color: \"#545252\",\n  });\n\n  const providerProps = { shadow, dispatch };\n\n  return (\n    <ShadowContext.Provider value={providerProps}>\n      {children}\n    </ShadowContext.Provider>\n  );\n};\n\nexport function useShadow(): ShadowContextType {\n  const context = React.useContext(ShadowContext);\n  if (context === undefined) {\n    throw new Error(\"useShadow must be used within ShadowProvider\");\n  }\n\n  return context;\n}\n","import React from \"react\";\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n  Box,\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher = (\n  props: ColorModeSwitcherProps\n): JSX.Element => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <Box textAlign=\"right\">\n      <IconButton\n        display=\"flex\"\n        variant=\"ghost\"\n        color=\"current\"\n        justifySelf=\"flex-end\"\n        marginLeft=\"2\"\n        onClick={toggleColorMode}\n        icon={<SwitchIcon />}\n        aria-label={`Switch to ${text} mode`}\n        {...props}\n      />\n    </Box>\n  );\n};\n","import { Flex } from \"@chakra-ui/layout\";\nimport { Heading } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\n\nconst Header = (): JSX.Element => {\n  return (\n    <Flex paddingBottom=\"10\" justifyContent=\"space-between\">\n      <Heading as=\"h1\" fontFamily=\"poppins\">\n        mokkup\n      </Heading>\n      <ColorModeSwitcher />\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { useDevice } from \"contexts/Device\";\nimport { BrowserOptions } from \"contexts/Device/types\";\nimport React from \"react\";\nimport \"./BrowserWindow.css\";\nimport { INPUT_PLACEHOLDER } from \"./constants\";\n\nconst BrowserWindow = (): JSX.Element => {\n  const context = useDevice();\n\n  const options = context.device.options as BrowserOptions;\n\n  return (\n    <div className=\"BrowserWindow\">\n      <div\n        style={{ background: options.isDark ? \"#353D44\" : \"#f1f1f1\" }}\n        className=\"BrowserWindow__row\"\n      >\n        <div className=\"BrowserWindow__column BrowserWindow__left\">\n          <span\n            className=\"dot\"\n            style={{ background: options.isStealth ? \"#969696\" : \"#ED594A\" }}\n          ></span>\n          <span\n            className=\"dot\"\n            style={{ background: options.isStealth ? \"#969696\" : \"#FDD800\" }}\n          ></span>\n          <span\n            className=\"dot\"\n            style={{ background: options.isStealth ? \"#969696\" : \"#5AC05A\" }}\n          ></span>\n        </div>\n        <div className=\"BrowserWindow__column BrowserWindow__middle\">\n          <span\n            style={{\n              display: options.isBarHidden ? \"none\" : \"\",\n              background: options.isDark ? \"#3D464F\" : \"#fff\",\n              color: options.isDark ? \"#fff\" : \"#000\",\n            }}\n            className=\"BrowserWindow__input\"\n            defaultValue={INPUT_PLACEHOLDER}\n          >\n            {options.url}\n          </span>\n        </div>\n        <div\n          style={{ display: options.isBurgerHidden ? \"none\" : \"\" }}\n          className=\"BrowserWindow__column BrowserWindow__right\"\n        >\n          <span\n            style={{ background: options.isDark ? \"#807e7e\" : \"#aaa\" }}\n            className=\"bar\"\n          ></span>\n          <span\n            style={{ background: options.isDark ? \"#807e7e\" : \"#aaa  \" }}\n            className=\"bar\"\n          ></span>\n          <span\n            style={{ background: options.isDark ? \"#807e7e\" : \"#aaa\" }}\n            className=\"bar\"\n          ></span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(BrowserWindow);\n","export const INPUT_PLACEHOLDER = \"Tap to change!\";\n","import { Directions } from \"contexts/Background/types\";\nimport { ColorResult, Color, RGBColor } from \"react-color\";\n\nexport const generateGradient = (\n  colors: string[],\n  direction: Directions[number] = \"to-r\"\n): string => {\n  if (!colors.length)\n    throw new Error(\"Gradient cannot be generated without a color.\");\n  const reducer = (accumulator: string, currentValue: string) =>\n    accumulator + currentValue + \",\";\n  let gradient = colors.reduce(reducer, `linear(${direction},`);\n  gradient += \")\";\n  return gradient;\n};\n\nexport const generateShadow = (\n  x = 0,\n  y = 0,\n  blur = 0,\n  spread = 0,\n  color = \"#bbb\"\n): string => `${x}px ${y}px ${blur}px ${spread}px ${color}`;\n\nexport const formatRGBA = (color: ColorResult | Color | string): string => {\n  if ((color as ColorResult).rgb) {\n    const { r, g, b, a } = (color as ColorResult).rgb;\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  if ((color as RGBColor).r) {\n    const { r, g, b, a } = color as RGBColor;\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  return color.toString();\n};\n\nfunction _componentToHex(c: string) {\n  const num = parseInt(c);\n  const hex = num.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport const formatHEX = (color: string): string => {\n  if (!color.includes(\"#\")) {\n    let [r, g, b] = color.split(\",\");\n    [r, g, b] = [r, g, b].map((color) => color.replace(/\\D/g, \"\"));\n    return \"#\" + _componentToHex(r) + _componentToHex(g) + _componentToHex(b);\n  }\n  return color;\n};\n","import BrowserWindow from \"components/BrowserWindow\";\nimport { useDevice } from \"contexts/Device\";\nimport { BezelOptions } from \"contexts/Device/types\";\nimport { useShadow } from \"contexts/Shadow\";\nimport React from \"react\";\nimport { generateShadow } from \"utils/colors\";\nimport { BEZEL, BROWSER } from \"../../contexts/Device/constants\";\n\nconst DeviceWrapper = ({ image }: { image: string }): JSX.Element => {\n  const deviceContext = useDevice();\n  const { x, y, blur, spread, color } = useShadow().shadow;\n  const shadow = () => generateShadow(x, y, blur, spread, color);\n  const [imageStyles, setimageStyles] = React.useState({});\n  const imageRef = React.useRef<HTMLImageElement>(null);\n\n  React.useEffect(() => {\n    switch (deviceContext.device.title) {\n      case BEZEL:\n        return setimageStyles({\n          border: `solid ${\n            (deviceContext.device.options as BezelOptions).color\n          } 10px`,\n          borderRadius: \"2rem\",\n        });\n      default:\n        return setimageStyles({});\n    }\n  }, [deviceContext.device]);\n\n  return (\n    <>\n      {deviceContext.device.title === BROWSER && <BrowserWindow />}\n      <img\n        width=\"100%\"\n        height=\"100%\"\n        alt=\"End result preview\"\n        style={{\n          boxShadow: shadow(),\n          maxWidth: \"100%\",\n          maxHeight: \"100%\",\n          ...imageStyles,\n        }}\n        ref={imageRef}\n        src={image}\n      />\n    </>\n  );\n};\n\nexport default DeviceWrapper;\n","export const resolutionDivider = (width: number, height: number): number => {\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  const max =\n    windowWidth > windowHeight\n      ? Math.max(\n          width / (window.innerWidth / 2),\n          height / (window.innerHeight / 1.5)\n        )\n      : Math.max(\n          width / (window.innerWidth / 1.3),\n          height / (window.innerHeight / 2)\n        );\n  return max > 1 ? max : 1;\n};\n\nexport const scaleDivider = (width: number, height: number): number => {\n  const min = (1.3 * window.innerHeight) / (height * 1.5);\n  return min < 1 ? min : 1;\n};\n","import { Flex, useMediaQuery } from \"@chakra-ui/react\";\nimport DeviceWrapper from \"containers/DeviceWrapper\";\nimport { useBackground } from \"contexts/Background\";\nimport { useDimensions } from \"contexts/Dimensions\";\nimport { useImage } from \"contexts/Image\";\nimport React from \"react\";\nimport { generateGradient } from \"utils/colors\";\nimport { resolutionDivider } from \"../../utils/resizers\";\n\nconst Foreground = ({\n  screenshotRef,\n}: {\n  screenshotRef: React.RefObject<HTMLDivElement>;\n}): JSX.Element => {\n  const backgroundContext = useBackground();\n  const imageContext = useImage();\n  const dimensionsContext = useDimensions();\n\n  const width: number = dimensionsContext.dimensions.resolution.x;\n  const height: number = dimensionsContext.dimensions.resolution.y;\n\n  // re-calculate image dimensions\n  useMediaQuery(\"(max-width: 600px)\");\n  const imageDimensions = {\n    w: `${width / resolutionDivider(width, height)}px`,\n    h: `${height / resolutionDivider(width, height)}px`,\n  };\n\n  const { colors, direction } =\n    backgroundContext && backgroundContext.background;\n  const image = imageContext.image;\n  const imageScale = dimensionsContext.dimensions.scale;\n\n  const background = () => {\n    if (colors.length === 0) return { bg: \"transparent\" };\n    if (colors.length === 1) return { bg: colors[0] };\n    const gradient = generateGradient(colors, direction);\n    return gradient && { bgGradient: gradient };\n  };\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      position=\"sticky\"\n      top=\"20\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Flex\n        data-testid=\"foregroundWrapper\"\n        shadow=\"lg\"\n        ref={screenshotRef}\n        {...imageDimensions}\n        transition=\"all .2s\"\n        overflow=\"hidden\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        {...background()}\n      >\n        <Flex\n          data-testid=\"foreground\"\n          flexDir=\"column\"\n          transform={`scale(${imageScale})`}\n        >\n          <DeviceWrapper image={image} />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Foreground;\n","import {\n  Box,\n  Button,\n  Popover,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ChromePicker, ColorChangeHandler } from \"react-color\";\nimport { formatHEX, formatRGBA } from \"utils/colors\";\n\ntype ColorPickProps = { callback: ColorChangeHandler; color: string };\n\nconst ColorPicker = ({ callback, color }: ColorPickProps): JSX.Element => {\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button\n          aria-label=\"Pick color\"\n          width=\"100%\"\n          display=\"flex\"\n          fontWeight=\"100\"\n          justifyContent=\"space-between\"\n          paddingY=\"10px\"\n          paddingLeft=\"0\"\n          paddingRight=\"10%\"\n        >\n          <Box width=\"10\" borderRadius=\"5\" height=\"10\" bg={color}></Box>\n          {formatHEX(color)}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent data-testid=\"colorPickerPopOver\" width=\"max-content\">\n        <PopoverArrow />\n        <PopoverCloseButton />\n        <ChromePicker color={formatRGBA(color)} onChange={callback} />\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(ColorPicker);\n","import { Grid } from \"@chakra-ui/react\";\nimport ColorPicker from \"components/ColorPicker\";\nimport { useBackground } from \"contexts/Background\";\nimport { CHANGE_COLORS } from \"contexts/Background/constants\";\nimport React from \"react\";\nimport { ColorResult } from \"react-color\";\nimport { formatRGBA } from \"utils/colors\";\n\ntype ColorPickWrapperProps = {\n  total: number;\n};\n\nconst ColorPickWrapper = ({ total }: ColorPickWrapperProps): JSX.Element => {\n  const context = useBackground();\n\n  const handleChange = (color: ColorResult, index: number): void => {\n    const formattedColor = formatRGBA(color);\n    if (context) {\n      const newColors = [...context.background.colors];\n      newColors[index] = formattedColor;\n      context.dispatch({ type: CHANGE_COLORS, payload: newColors });\n    }\n  };\n\n  return (\n    <Grid\n      templateColumns=\"1fr 1fr\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      gridGap=\"1rem\"\n    >\n      {Array(total)\n        .fill(ColorPicker)\n        .map((ColorPicker, index) => (\n          <ColorPicker\n            color={context && [...context.background.colors][index]}\n            key={index}\n            index={index}\n            callback={(color: ColorResult) => handleChange(color, index)}\n          />\n        ))}\n    </Grid>\n  );\n};\n\nexport default React.memo(ColorPickWrapper);\n","import { ColorMode } from \"@chakra-ui/react\";\nimport React from \"react\";\n\ntype UiGradientsLogoProps = {\n  colorMode: ColorMode;\n};\nconst UiGradientsLogo = ({ colorMode }: UiGradientsLogoProps): JSX.Element => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"113\"\n      height=\"15.0\"\n      viewBox=\"0 0 113 18\"\n      fill={colorMode === \"light\" ? \"black\" : \"white\"}\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M104.573 7.877c-1.65 1.446-6.2 5.171-6.761 5.643-.445.376-.855.752-.992.598-.137-.136.325-1.077.582-1.539.29-.547 1.316-2.462 2.445-4.582h2.035l.461-.873-2.034.018c1.573-2.976 2.223-4.087 2.223-4.087h-2.72s-.53.923-2.222 4.087h-1.967s-.17.307-.462.855h1.984l-.585 1.088c-1.777 1.703-4.283 4.066-4.733 4.435-.428.376-.838.752-.975.598-.137-.136.325-1.077.565-1.539a104.506 104.506 0 0 0 1.436-2.701c1.3-2.48.256-3.232-1.077-3.232-.804 0-3.284.735-6.72 5.215l2.787-5.198H85.14l-3.023 5.629c-2.082 2.195-4.146 3.673-5.938 3.673-1.47 0-2.069-.872-1.778-2.24.24.222.53.41.906.513 1.488.462 3.181-.342 4.652-2.172 2.445-3.06.906-5.42-1.574-5.42-1.43 0-3.62 1.206-5.479 3.943-1.422 1.35-2.821 2.663-3.139 2.93-.445.377-.855.753-.992.6-.137-.137.325-1.078.582-1.54.735-1.385 3.18-5.933 3.18-5.933l-2.719.017s-.547 1.025-1.273 2.38c-1.773 1.705-4.31 4.104-4.763 4.477-.445.376-.838.752-.992.598-.137-.136.325-1.077.582-1.539.735-1.385 6.104-11.44 6.104-11.44h-2.702s-2 3.745-3.95 7.405c-.205-1.01-.923-1.898-1.898-1.898-1.418 0-3.443 1.093-5.703 4.309-1.28 1.214-2.465 2.322-2.761 2.565-.445.376-.838.752-.992.598-.137-.136.325-1.077.581-1.539.736-1.385 3.181-5.933 3.181-5.933l-2.719.017s-.41.786-1.009 1.898c-.205-1.01-.923-1.915-1.898-1.915-1.418 0-3.443 1.093-5.703 4.309-1.28 1.214-2.465 2.322-2.761 2.565-.428.376-.838.752-.975.598-.137-.136.308-1.077.564-1.539.735-1.385.855-1.47 1.283-2.291 1.145-2.189-.548-1.317-1.864-2.07a1.338 1.338 0 0 1-.332-.257 2.952 2.952 0 0 0-.005-.093c1.008-1.098 1.796-2.222.901-2.796-.838-.547-2.326-.786-3.317.445-1.09 1.373-.213 2.693.642 3.326-1.782 1.711-4.514 4.29-4.986 4.677-.427.376-.838.752-.974.598-.137-.136.324-1.077.564-1.539a438.001 438.001 0 0 0 1.624-3.026l-1.333.017H29.24c-.257 0-.496.12-.616.342l-.65 1.077a.403.403 0 0 0 0 .393c.069.12.189.206.325.206h2.087c-1.403 1.727-3.42 3.676-5.831 3.676-2.89 0-2.839-3.146-.48-6.977 2.36-3.83 5.456-5.626 6.79-5.626 1.71 0 1.35 2.446-1.232 4.43 0 0 1.129 1.128 1.95.58 2.821-1.88 3.078-6.532-.753-6.532-1.95 0-6.122 1.266-9.627 6.19-.96 1.349-1.59 2.601-1.949 3.74-1.235 1.168-2.354 2.215-2.634 2.45-.444.377-.855.753-.992.6-.136-.137.325-1.078.582-1.54.735-1.385 3.18-5.933 3.18-5.933l-2.718.017-1.288 2.407c-1.776 1.703-4.292 4.08-4.732 4.45-.444.376-.855.752-.992.598-.136-.136.325-1.077.582-1.539.735-1.385 3.18-5.933 3.18-5.933l-2.718.017s-.616 1.145-1.403 2.633c-1.026 1.779-3.915 4.822-4.873 4.822-.992 0-.479-1.077-.222-1.539.735-1.385 3.18-5.933 3.18-5.933l-2.719.017S1.231 13.093.53 14.375C-.445 16.17-.085 18 1.625 18c1.111 0 3.231-1.813 5.061-3.83-.308.564-.547.991-.667 1.23-.975 1.78-.461 2.6.667 2.6.718 0 1.642-.41 3.13-1.813.636-.605 2.2-2.159 3.738-3.697a608.615 608.615 0 0 1-1.567 2.91c-.975 1.78-.462 2.6.667 2.6.718 0 1.642-.41 3.13-1.813.548-.52 1.783-1.745 3.097-3.056C18.773 16.18 20.9 18 23.46 18c1.676 0 3.232-.718 4.6-1.761-.41 1.197.103 1.761 1.043 1.761.718 0 1.642-.41 3.13-1.813 1.133-1.076 5.188-5.157 6.819-6.808.297.22.45.614-.065 1.473-.838 1.402-1.778 3.266-2.48 4.549-.957 1.778-.461 2.599.667 2.599.701 0 1.66-.41 3.13-1.813.372-.349 1.05-1.014 1.852-1.81C41.569 16.569 42.4 18 44.084 18c1.18 0 2.394-.838 3.403-1.847-.462 1.266.051 1.847 1.009 1.847.718 0 1.658-.41 3.129-1.813.369-.35 1.049-1.02 1.855-1.82-.593 2.197.24 3.633 1.924 3.633 1.18 0 2.394-.838 3.403-1.847-.462 1.266.051 1.847 1.009 1.847.718 0 1.658-.41 3.13-1.813.641-.61 2.225-2.184 3.775-3.734a617.245 617.245 0 0 1-1.587 2.948C64.159 17.179 64.672 18 65.8 18c.718 0 1.641-.41 3.13-1.813.469-.446 1.443-1.409 2.539-2.5-.555 2.492.71 4.313 3.855 4.313 1.614 0 3.24-.769 4.773-1.946L79.053 18h2.702l.034-.051-.034.051c2.223-4.104 6.789-8.379 7.78-8.379.582 0 .36.752-.341 2.07-.787 1.436-1.283 2.427-1.984 3.71-.975 1.778-.462 2.599.667 2.599.701 0 1.641-.41 3.13-1.813.636-.604 2.194-2.156 3.726-3.693-.783 1.463-1.375 2.574-1.555 2.907-.975 1.778-.462 2.599.667 2.599.718 0 1.641-.41 3.13-1.813 1.026-.975 4.933-4.417 7.02-6.283-.139.726-.243 1.475-.369 2.18-.154.803-.29 1.419-.462 1.932-2.189.581-4.206.974-4.412 2.154-.273 1.488 1.232 1.83 2.292 1.83 1.744 0 3.488-.564 4.651-3.557 2.223-1.077 5.592-3.59 7.13-5.9.138-.222.257-1.504-.153-1.162-2.497 3.249-4.72 4.788-6.515 5.592.102-.377.205-.787.273-1.214l.684-3.42s3.147-2.685.154-2.48c-1.426.098-2.212.907-2.695 2.018zm-85.61-3.42c-1.042 0-1.521-.838-1.06-1.881.48-1.043 1.694-1.898 2.737-1.898 1.06 0 1.522.855 1.06 1.898-.462 1.043-1.693 1.88-2.736 1.88zm27.019 10.841c.89 0 2.496-1.505 3.59-3.351 1.112-1.847 1.283-3.352.411-3.352-.889 0-2.496 1.505-3.608 3.352-1.094 1.846-1.265 3.351-.393 3.351zm11.32 0c.89 0 2.497-1.505 3.591-3.351 1.112-1.847 1.283-3.352.41-3.352-.889 0-2.496 1.505-3.608 3.352-1.094 1.846-1.265 3.351-.393 3.351zM72.111 4.457c1.043 0 2.274-.838 2.736-1.881.461-1.043 0-1.898-1.06-1.898-1.044 0-2.258.855-2.737 1.898-.461 1.043.018 1.88 1.06 1.88zm6.652 4.138c-.89 0-2.497 1.488-3.609 3.352-.034.085-.085.154-.136.239.838.65 1.795 0 2.599-.667 1.094-.923 2.018-2.924 1.146-2.924zm21.888 7.934c-.12.633.735.496 1.162-.085.206-.274.428-.513.65-.855-.992.308-1.744.581-1.812.94z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default React.memo(UiGradientsLogo);\n","import {\n  Box,\n  Button,\n  IconButton,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useBreakpointValue,\n  useColorMode,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useBackground } from \"contexts/Background\";\nimport { CHANGE_COLORS } from \"contexts/Background/constants\";\nimport React, { useState } from \"react\";\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\nimport gradients from \"static/gradients.json\";\nimport { generateGradient } from \"utils/colors\";\nimport UiGradientsLogo from \"./UiGradientsLogo\";\n\nconst PrebuiltPicker = (): JSX.Element => {\n  const { colorMode } = useColorMode();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currentPage, setcurrentPage] = useState<number>(0);\n  const context = useBackground();\n\n  const colorsPerPage: number =\n    useBreakpointValue({ base: 6, md: 16, lg: 32 }) || 6;\n  const totalPages: number = Math.floor(gradients.length / colorsPerPage);\n\n  function handlePick(colors: string[]) {\n    onClose();\n    context.dispatch({ type: CHANGE_COLORS, payload: colors });\n  }\n\n  return (\n    <>\n      <Modal size=\"6xl\" isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            <UiGradientsLogo colorMode={colorMode} />\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody display=\"grid\" gridGap=\"5\">\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              gridGap=\"10px\"\n            ></Box>\n            <Box\n              display=\"grid\"\n              gridGap=\"5\"\n              justifyContent=\"center\"\n              gridTemplateColumns={{\n                base: \"1fr 1fr\",\n                md: \"1fr 1fr 1fr\",\n                lg: \"repeat(auto-fill, 120px)\",\n              }}\n            >\n              {gradients\n                .slice(\n                  currentPage * colorsPerPage,\n                  (currentPage + 1) * colorsPerPage\n                )\n                .map((gradient, index) => (\n                  <Button\n                    key={index}\n                    onClick={() => handlePick(gradient.colors)}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    height={{ base: \"100px\", lg: \"150px\" }}\n                    gridGap=\"3\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    aria-label={`Choose ${gradient.name} gradient`}\n                  >\n                    <Box\n                      boxShadow=\"2xl\"\n                      width={{ base: \"30px\", md: \"50px\" }}\n                      height={{ base: \"30px\", md: \"50px\" }}\n                      borderRadius=\"50%\"\n                      bgGradient={generateGradient(gradient.colors)}\n                    ></Box>\n                    <Box\n                      height={{ base: \"30px\", md: \"60px\" }}\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <span style={{ whiteSpace: \"break-spaces\" }}>\n                        {gradient.name}\n                      </span>\n                    </Box>\n                  </Button>\n                ))}\n            </Box>\n            <Box display=\"flex\" justifyContent=\"space-between\" gridGap=\"10px\">\n              <IconButton\n                isDisabled={currentPage === 0}\n                aria-label=\"Previous Gradient Page\"\n                onClick={() => setcurrentPage(currentPage - 1)}\n                icon={<BiLeftArrow />}\n              />\n              <IconButton\n                isDisabled={currentPage === totalPages}\n                aria-label=\"Next Gradient Page\"\n                onClick={() => setcurrentPage(currentPage + 1)}\n                icon={<BiRightArrow />}\n              />\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n      <Button\n        aria-label={`Open prebuilt uiGradients`}\n        display=\"flex\"\n        onClick={onOpen}\n        alignItems=\"center\"\n        gridGap=\"2\"\n      >\n        <UiGradientsLogo colorMode={colorMode} />\n      </Button>\n    </>\n  );\n};\n\nexport default PrebuiltPicker;\n","import { Directions, XWays } from \"contexts/Background/types\";\n\nconst directions: Directions = [\n  \"to-t\",\n  \"to-tr\",\n  \"to-r\",\n  \"to-br\",\n  \"to-b\",\n  \"to-bl\",\n  \"to-l\",\n  \"to-tl\",\n];\nexport const rotate = (\n  lastValue: Directions[number],\n  direction: XWays[number]\n): Directions[number] => {\n  const currentDirection = lastValue;\n  const index = directions.indexOf(currentDirection);\n  switch (direction) {\n    case \"right\":\n      if (index === directions.length - 1) return directions[0];\n      return directions[index + 1];\n    case \"left\":\n      if (index === 0) return directions[directions.length - 1];\n      return directions[index - 1];\n    default:\n      throw new Error(\n        `Wrong parameters: lastValue: ${lastValue}, direction:${direction}`\n      );\n  }\n};\n","import { Box, Grid, Heading, IconButton } from \"@chakra-ui/react\";\nimport ColorPickWrapper from \"containers/ColorPickWrapper\";\nimport { useBackground } from \"contexts/Background\";\nimport { CHANGE_COLORS, CHANGE_DIRECTION } from \"contexts/Background/constants\";\nimport React from \"react\";\nimport { BiMinus, BiPlus, BiRotateLeft, BiRotateRight } from \"react-icons/bi\";\nimport PrebuiltPicker from \"./PreBuiltPicker\";\nimport { rotate } from \"./utils\";\n\nconst BackgroundPicker = (): JSX.Element => {\n  const context = useBackground();\n  const colors: string[] = context.background.colors;\n\n  const removeColor = () => {\n    const newColors: string[] = [...colors];\n    newColors.pop();\n    context.dispatch({ type: CHANGE_COLORS, payload: newColors });\n  };\n\n  const addColor = () => {\n    context.dispatch({ type: CHANGE_COLORS, payload: [...colors, \"#CCCCCC\"] });\n  };\n\n  return (\n    <Grid gridGap=\"10\">\n      <Box display=\"flex\" gridGap=\"6\" alignItems=\"center\">\n        <Heading as=\"span\" width=\"90px\" fontSize=\"md\" marginRight=\"auto\">\n          Options:\n        </Heading>\n        <IconButton\n          borderRadius=\"50%\"\n          size=\"sm\"\n          aria-label=\"Remove color\"\n          icon={<BiMinus />}\n          isDisabled={colors.length < 2}\n          onClick={removeColor}\n        />\n        <IconButton\n          borderRadius=\"50%\"\n          size=\"sm\"\n          aria-label=\"Add color\"\n          icon={<BiPlus />}\n          isDisabled={colors.length > 3}\n          onClick={addColor}\n        />\n      </Box>\n      <ColorPickWrapper total={colors.length} />\n      <PrebuiltPicker />\n      <Box display=\"flex\" gridGap=\"6\" alignItems=\"center\">\n        <Heading\n          as=\"span\"\n          width=\"90px\"\n          fontSize=\"md\"\n          justifySelf=\"flex-start\"\n          marginRight=\"auto\"\n        >\n          Direction:\n        </Heading>\n        <IconButton\n          size=\"sm\"\n          borderRadius=\"50%\"\n          aria-label=\"Rotate gradients left\"\n          isDisabled={colors.length < 2}\n          alignSelf=\"flex-end\"\n          icon={<BiRotateLeft />}\n          onClick={() =>\n            context.dispatch({\n              type: CHANGE_DIRECTION,\n              payload: rotate(context.background.direction, \"left\"),\n            })\n          }\n        />\n        <IconButton\n          size=\"sm\"\n          borderRadius=\"50%\"\n          aria-label=\"Rotate gradients right\"\n          isDisabled={colors.length < 2}\n          justifySelf=\"flex-end\"\n          icon={<BiRotateRight />}\n          onClick={() =>\n            context.dispatch({\n              type: CHANGE_DIRECTION,\n              payload: rotate(context.background.direction, \"right\"),\n            })\n          }\n        />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default BackgroundPicker;\n","import { Box } from \"@chakra-ui/layout\";\nimport { Flex, Tooltip, useRadio, UseRadioProps } from \"@chakra-ui/react\";\nimport React, { Key } from \"react\";\n\ntype WrapRadioProps = {\n  radioProps: UseRadioProps;\n  key?: Key | null;\n  children: JSX.Element | string;\n  tooltip: string;\n};\n\nconst WrapRadio = ({\n  radioProps,\n  children,\n  tooltip,\n}: WrapRadioProps): JSX.Element => {\n  const { getInputProps, getCheckboxProps } = useRadio(radioProps);\n\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n\n  return (\n    <Tooltip label={tooltip} aria-label={tooltip}>\n      <Box as=\"label\">\n        <input {...input} />\n        <Flex\n          {...checkbox}\n          maxW={typeof children === \"string\" ? \"7rem\" : \"\"}\n          w={typeof children === \"string\" ? \"\" : \"50px\"}\n          textAlign=\"center\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          h=\"100%\"\n          fontSize={{ base: \"sm\", md: \"md\" }}\n          cursor=\"pointer\"\n          borderWidth=\"1px\"\n          borderRadius={typeof children === \"string\" ? \"10px\" : \"50%\"}\n          boxShadow=\"md\"\n          _checked={{\n            bg: \"teal.600\",\n            color: \"white\",\n            borderColor: \"teal.600\",\n          }}\n          _focus={{\n            boxShadow: \"outline\",\n          }}\n          px={{ base: 1, md: 2 }}\n          py={typeof children === \"string\" ? 2 : 4}\n        >\n          {children}\n        </Flex>\n      </Box>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(WrapRadio);\n","import { Grid, GridProps, useRadioGroup } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport WrapRadio from \"../../components/WrapRadio\";\n\ntype StackRadioGroupProps = {\n  options: { value: string | number; label: JSX.Element | string }[];\n  name: string;\n  testId?: string;\n  callback?: (nextValue: never) => void;\n  defaultValue?: string;\n  styles?: GridProps;\n};\n\nconst StackRadioGroup = ({\n  options,\n  name,\n  callback,\n  defaultValue,\n  styles,\n  testId,\n}: StackRadioGroupProps): JSX.Element => {\n  const { getRootProps, getRadioProps } = useRadioGroup({\n    name: name,\n    defaultValue,\n    onChange: callback,\n  });\n\n  const group = getRootProps();\n\n  return (\n    <Grid\n      data-testid={testId}\n      {...styles}\n      justifyContent=\"space-evenly\"\n      gridTemplateColumns={{\n        base: `repeat(${options.length},minmax(20px, 80px))`,\n        md: `repeat(${options.length},minmax(80px, 100px))`,\n      }}\n      fontSize=\"md\"\n      wordBreak=\"break-word\"\n      {...group}\n    >\n      {options.map((option) => {\n        const radio = getRadioProps({\n          ...getRadioProps(),\n          value: option.value,\n        });\n        return (\n          <WrapRadio\n            tooltip={option.value as string}\n            key={option.value}\n            radioProps={radio}\n          >\n            {option.label}\n          </WrapRadio>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default React.memo(StackRadioGroup);\n","import { Flex, FormLabel, Grid, Icon, Input, Switch } from \"@chakra-ui/react\";\nimport ColorPicker from \"components/ColorPicker\";\nimport StackRadioGroup from \"containers/StackRadioGroup\";\nimport { useDevice } from \"contexts/Device\";\nimport {\n  BEZEL,\n  BROWSER,\n  CHANGE_BEZEL_COLOR,\n  CHANGE_TYPE,\n  CHANGE_URL,\n  NONE,\n  TOGGLE_BURGER,\n  TOGGLE_DARK_MODE,\n  TOGGLE_STEALTH_BUTTONS,\n  TOGGLE_URL_BAR,\n} from \"contexts/Device/constants\";\nimport { BezelOptions, BrowserOptions } from \"contexts/Device/types\";\nimport React from \"react\";\nimport { ColorResult } from \"react-color\";\nimport { AiOutlineMobile } from \"react-icons/ai\";\nimport { FiCircle } from \"react-icons/fi\";\nimport { GoBrowser } from \"react-icons/go\";\nimport { formatRGBA } from \"utils/colors\";\nimport {\n  BEZEL_COLOR_LABEL,\n  DARK_MODE,\n  HIDDEN_BAR,\n  HIDDEN_BURGER,\n  PLACEHOLDER,\n  STEALTH_BUTTONS,\n  URL_LABEL,\n} from \"./constants\";\n\ntype BrowserOptionSwitch = {\n  title:\n    | typeof DARK_MODE\n    | typeof HIDDEN_BAR\n    | typeof HIDDEN_BURGER\n    | typeof STEALTH_BUTTONS;\n  defaultValue?: boolean;\n  callback: (status: boolean) => void;\n};\ntype BrowserOptionHandler = {\n  input: {\n    title: string;\n    defaultValue?: string;\n    callback: (el: React.ChangeEvent<HTMLInputElement>) => void;\n  };\n  switches: BrowserOptionSwitch[];\n};\n\ntype Option_Type = { value: string; label: JSX.Element };\n\nconst options: Option_Type[] = [\n  {\n    value: NONE,\n    label: <Icon as={FiCircle} />,\n  },\n  {\n    value: BROWSER,\n    label: <Icon as={GoBrowser} />,\n  },\n  {\n    value: BEZEL,\n    label: <Icon as={AiOutlineMobile} />,\n  },\n];\n\nconst DevicePicker = (): JSX.Element => {\n  const context = useDevice();\n\n  const handleChange = (nextValue: string) => {\n    switch (nextValue) {\n      case BROWSER:\n        return context.dispatch({\n          type: CHANGE_TYPE,\n          payload: {\n            title: BROWSER,\n            options: {\n              isDark: false,\n              isStealth: false,\n              isBurgerHidden: false,\n              isBarHidden: false,\n            },\n          },\n        });\n      case BEZEL:\n        return context.dispatch({\n          type: CHANGE_TYPE,\n          payload: {\n            title: BEZEL,\n            options: { color: \"#000000\" },\n          },\n        });\n      case NONE:\n        return context.dispatch({\n          type: CHANGE_TYPE,\n          payload: {\n            title: NONE,\n          },\n        });\n    }\n  };\n\n  const browserOptions: BrowserOptionHandler = {\n    input: {\n      title: URL_LABEL,\n      defaultValue:\n        context.device.options &&\n        (context.device.options as BrowserOptions).url,\n      callback: (e: React.ChangeEvent<HTMLInputElement>) => {\n        context.dispatch({ type: CHANGE_URL, payload: e.target?.value });\n      },\n    },\n    switches: [\n      {\n        title: DARK_MODE,\n        callback: () => context.dispatch({ type: TOGGLE_DARK_MODE }),\n        defaultValue:\n          context.device.options &&\n          (context.device.options as BrowserOptions).isDark,\n      },\n      {\n        title: STEALTH_BUTTONS,\n        callback: () => context.dispatch({ type: TOGGLE_STEALTH_BUTTONS }),\n        defaultValue:\n          context.device.options &&\n          (context.device.options as BrowserOptions).isStealth,\n      },\n      {\n        title: HIDDEN_BURGER,\n        callback: () => context.dispatch({ type: TOGGLE_BURGER }),\n        defaultValue:\n          context.device.options &&\n          (context.device.options as BrowserOptions).isBurgerHidden,\n      },\n      {\n        title: HIDDEN_BAR,\n        callback: () => context.dispatch({ type: TOGGLE_URL_BAR }),\n        defaultValue:\n          context.device.options &&\n          (context.device.options as BrowserOptions).isBarHidden,\n      },\n    ],\n  };\n\n  const changeBezelColor = (color: ColorResult): void =>\n    context.dispatch({ type: CHANGE_BEZEL_COLOR, payload: formatRGBA(color) });\n\n  return (\n    <Grid gridGap=\"30\">\n      <StackRadioGroup\n        defaultValue={BROWSER}\n        name=\"device type\"\n        options={options}\n        callback={handleChange}\n      />\n      <Grid\n        gridTemplateColumns=\"1fr 1fr\"\n        justifyContent=\"space-evenly\"\n        gridGap=\"8\"\n        alignItems=\"center\"\n      >\n        {context.device.title === BROWSER && (\n          <>\n            {browserOptions.switches.map((browserOption, index) => (\n              <Grid\n                key={index}\n                gridTemplateColumns=\"90px 40px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <FormLabel htmlFor={browserOption.title}>\n                  {browserOption.title}\n                </FormLabel>\n                <Switch\n                  defaultIsChecked={browserOption.defaultValue}\n                  onChange={(e) => browserOption.callback(e.target.checked)}\n                  id={browserOption.title}\n                />\n              </Grid>\n            ))}\n            <Flex gridGap=\"2\" alignItems=\"center\" gridColumn=\"1/-1\">\n              <FormLabel\n                m=\"0\"\n                textAlign=\"center\"\n                htmlFor={browserOptions.input.title}\n              >\n                {browserOptions.input.title}\n              </FormLabel>\n              <Input\n                defaultValue={browserOptions.input.defaultValue}\n                w=\"100%\"\n                placeholder={PLACEHOLDER}\n                id={browserOptions.input.title}\n                onChange={browserOptions.input.callback}\n              />\n            </Flex>\n          </>\n        )}\n\n        {context.device.title === BEZEL && (\n          <>\n            <label style={{ fontSize: \".9rem\" }}>{BEZEL_COLOR_LABEL}</label>\n            <ColorPicker\n              color={(context.device.options as BezelOptions).color}\n              callback={(color: ColorResult) => changeBezelColor(color)}\n            />\n          </>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DevicePicker;\n","export const STEALTH_BUTTONS = \"Stealth Buttons\";\nexport const DARK_MODE = \"Dark Mode\";\nexport const HIDDEN_BURGER = \"Hidden Burger\";\nexport const HIDDEN_BAR = \"Hidden Bar\";\nexport const BEZEL_COLOR_LABEL = \"Bezel Color\";\nexport const URL_LABEL = \"URL:\";\nexport const PLACEHOLDER = \"https://mokkup.netlify.app\";\n","export const parseNumberInput = (\n  val: string,\n  { min, max }: { min?: number; max?: number } = {}\n): number => {\n  const result = val ? parseInt(val.replace(/[^0-9]/g, \"\")) : 0;\n  if (max && result > max) return max;\n  if (min && result < min) return min;\n  return result;\n};\n","export const getUploadedImageDimensions = (src: string): Promise<unknown> => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () =>\n      resolve({\n        x: img.width,\n        y: img.height,\n      });\n    img.src = src;\n    img.remove();\n  });\n};\n","import {\n  Grid,\n  GridItem,\n  Heading,\n  InputGroup,\n  InputLeftAddon,\n  InputRightAddon,\n  NumberInput,\n  NumberInputField,\n  Slider,\n  SliderFilledTrack,\n  SliderThumb,\n  SliderTrack,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport StackRadioGroup from \"containers/StackRadioGroup\";\nimport { useDimensions } from \"contexts/Dimensions\";\nimport {\n  CHANGE_HEIGHT,\n  CHANGE_RESOLUTION,\n  CHANGE_SCALE,\n  CHANGE_WIDTH,\n} from \"contexts/Dimensions/constants\";\nimport { useImage } from \"contexts/Image\";\nimport React from \"react\";\nimport { scaleDivider } from \"utils/resizers\";\nimport { parseNumberInput } from \"utils/validation\";\nimport {\n  HEIGHT_LABEL,\n  HEIGHT_RIGHT_LABEL,\n  HEIGHT_TOOLTIP,\n  INSTAGRAM_POST_SIZE,\n  INSTAGRAM_POST_TITLE,\n  INSTAGRAM_STORY_SIZE,\n  INSTAGRAM_STORY_TITLE,\n  Item,\n  Option_Type,\n  ORIGINAL_SIZE_TITLE,\n  PREBUILT_DIMENSIONS_TEST_ID,\n  SCALE_LABEL,\n  TWITTER_POST_SIZE,\n  TWITTER_POST_TITLE,\n  WIDTH_LABEL,\n  WIDTH_RIGHT_LABEL,\n  WIDTH_TOOLTIP,\n} from \"./constants\";\nimport { getUploadedImageDimensions } from \"./utils\";\n\nconst DimensionPicker = (): JSX.Element => {\n  const context = useDimensions();\n  const imageContext = useImage();\n\n  React.useEffect(() => {\n    const setScale = async () => {\n      const { x, y } = (await getUploadedImageDimensions(\n        imageContext.image\n      )) as { x: number; y: number };\n      context.dispatch({ type: CHANGE_SCALE, payload: scaleDivider(x, y) });\n    };\n    setScale();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageContext.image, getUploadedImageDimensions]);\n\n  const changeScale = (scale: number) =>\n    context.dispatch({ type: CHANGE_SCALE, payload: scale / 100 });\n  const changeWidth = (width: number) =>\n    context.dispatch({ type: CHANGE_WIDTH, payload: width });\n  const changeHeight = (height: number) =>\n    context.dispatch({ type: CHANGE_HEIGHT, payload: height });\n\n  const scale = {\n    label: SCALE_LABEL,\n    callback: changeScale,\n    value: Math.round(context.dimensions.scale * 100),\n  };\n\n  const resolutionItems: Item[] = [\n    {\n      label: WIDTH_LABEL,\n      callback: changeWidth,\n      value: context.dimensions.resolution.x,\n      tooltip: WIDTH_TOOLTIP,\n      rightLabel: WIDTH_RIGHT_LABEL,\n    },\n    {\n      label: HEIGHT_LABEL,\n      callback: changeHeight,\n      value: context.dimensions.resolution.y,\n      tooltip: HEIGHT_TOOLTIP,\n      rightLabel: HEIGHT_RIGHT_LABEL,\n    },\n  ];\n\n  const options: Option_Type[] = [\n    {\n      value: TWITTER_POST_TITLE,\n      label: TWITTER_POST_TITLE,\n    },\n    {\n      value: INSTAGRAM_STORY_TITLE,\n      label: INSTAGRAM_STORY_TITLE,\n    },\n    {\n      value: INSTAGRAM_POST_TITLE,\n      label: INSTAGRAM_POST_TITLE,\n    },\n    {\n      value: ORIGINAL_SIZE_TITLE,\n      label: ORIGINAL_SIZE_TITLE,\n    },\n  ];\n\n  const handleChange = async (\n    nextValue:\n      | typeof ORIGINAL_SIZE_TITLE\n      | typeof TWITTER_POST_TITLE\n      | typeof INSTAGRAM_POST_TITLE\n      | typeof INSTAGRAM_STORY_TITLE\n  ) => {\n    switch (nextValue) {\n      case TWITTER_POST_TITLE:\n        return context.dispatch({\n          type: CHANGE_RESOLUTION,\n          payload: TWITTER_POST_SIZE,\n        });\n      case INSTAGRAM_POST_TITLE:\n        return context.dispatch({\n          type: CHANGE_RESOLUTION,\n          payload: INSTAGRAM_POST_SIZE,\n        });\n      case INSTAGRAM_STORY_TITLE:\n        return context.dispatch({\n          type: CHANGE_RESOLUTION,\n          payload: INSTAGRAM_STORY_SIZE,\n        });\n      case ORIGINAL_SIZE_TITLE:\n        return context.dispatch({\n          type: CHANGE_RESOLUTION,\n          payload: (await getUploadedImageDimensions(imageContext.image)) as {\n            x: number;\n            y: number;\n          },\n        });\n    }\n  };\n\n  return (\n    <Grid gridGap=\"10\">\n      <GridItem>\n        <StackRadioGroup\n          testId={PREBUILT_DIMENSIONS_TEST_ID}\n          styles={{ gridGap: \"0.2rem\" }}\n          defaultValue={TWITTER_POST_TITLE}\n          name=\"device type\"\n          options={options}\n          callback={handleChange}\n        />\n      </GridItem>\n      <GridItem>\n        <Grid gridGap=\"0.5rem\" templateColumns=\"1fr 1fr\">\n          {resolutionItems.map(\n            (\n              { label, callback, tooltip, value, min, max, rightLabel },\n              index\n            ) => (\n              <GridItem\n                gridRow=\"2\"\n                key={index}\n                display=\"flex\"\n                gridGap=\"1rem\"\n                alignItems=\"center\"\n              >\n                <InputGroup>\n                  <Tooltip label={tooltip}>\n                    <InputLeftAddon\n                      fontSize=\".7rem\"\n                      p=\"1\"\n                      justifyContent=\"center\"\n                      children={label}\n                    />\n                  </Tooltip>\n                  <NumberInput\n                    data-testid={label}\n                    min={min}\n                    w=\"100%\"\n                    max={max}\n                    textAlign=\"center\"\n                    inputMode=\"numeric\"\n                    placeholder=\"0\"\n                    value={value}\n                    defaultValue={value}\n                    onChange={(val) =>\n                      callback(parseNumberInput(val, { min, max }))\n                    }\n                  >\n                    <NumberInputField textAlign=\"center\" p=\"2\" />\n                  </NumberInput>\n                  <InputRightAddon fontSize=\".7rem\" children={rightLabel} />\n                </InputGroup>\n              </GridItem>\n            )\n          )}\n        </Grid>\n      </GridItem>\n\n      <GridItem>\n        <Grid>\n          <Heading fontWeight=\"0\" paddingBottom=\"4\" fontSize=\"lg\" as=\"span\">\n            {scale.label}\n          </Heading>\n          <Slider\n            onChange={scale.callback}\n            colorScheme=\"teal\"\n            aria-label=\"scale-slider\"\n            value={scale.value}\n          >\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </Grid>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default DimensionPicker;\n","import {\n  Grid,\n  GridItem,\n  InputGroup,\n  InputLeftAddon,\n  NumberInput,\n  NumberInputField,\n  Text,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport ColorPicker from \"components/ColorPicker\";\nimport { useShadow } from \"contexts/Shadow\";\nimport {\n  CHANGE_BLUR,\n  CHANGE_COLOR,\n  CHANGE_SPREAD,\n  CHANGE_X,\n  CHANGE_Y,\n} from \"contexts/Shadow/constants\";\nimport React from \"react\";\nimport { ColorResult } from \"react-color\";\nimport { formatRGBA } from \"utils/colors\";\nimport { parseNumberInput } from \"utils/validation\";\nimport {\n  BLUR_LABEL,\n  BLUR_TOOLTIP,\n  SPREAD_LABEL,\n  SPREAD_TOOLTIP,\n  VALUE_INFORMATION,\n  X_AXIS_LABEL,\n  X_AXIS_TOOLTIP,\n  Y_AXIS_LABEL,\n  Y_AXIS_TOOLTIP,\n} from \"./constants\";\n\ntype gridItem = {\n  label: string;\n  callback: (val: number) => void;\n  tooltip: string;\n  value: number;\n};\n\nconst ShadowPicker = (): JSX.Element => {\n  const context = useShadow();\n\n  const changeColor = (color: ColorResult): void =>\n    context.dispatch({ type: CHANGE_COLOR, payload: formatRGBA(color) });\n  const changeX = (x: number): void =>\n    context.dispatch({ type: CHANGE_X, payload: x });\n  const changeY = (y: number): void =>\n    context.dispatch({ type: CHANGE_Y, payload: y });\n  const changeBlur = (blur: number): void =>\n    context.dispatch({ type: CHANGE_BLUR, payload: blur });\n  const changeSpread = (spread: number): void =>\n    context.dispatch({ type: CHANGE_SPREAD, payload: spread });\n\n  const gridItems: gridItem[] = [\n    {\n      label: X_AXIS_LABEL,\n      callback: changeX,\n      tooltip: X_AXIS_TOOLTIP,\n      value: context.shadow.x,\n    },\n    {\n      label: Y_AXIS_LABEL,\n      callback: changeY,\n      tooltip: Y_AXIS_TOOLTIP,\n      value: context.shadow.y,\n    },\n    {\n      label: BLUR_LABEL,\n      callback: changeBlur,\n      tooltip: BLUR_TOOLTIP,\n      value: context.shadow.blur,\n    },\n    {\n      label: SPREAD_LABEL,\n      callback: changeSpread,\n      tooltip: SPREAD_TOOLTIP,\n      value: context.shadow.spread,\n    },\n  ];\n  return (\n    <Grid\n      gridGap=\"0.5rem\"\n      templateColumns={{ base: \"repeat(2,1fr)\", lg: \"repeat(4,6rem)\" }}\n    >\n      <GridItem marginY=\"2\" gridColumn={{ base: \"1\", lg: \"1/3\" }}>\n        <ColorPicker\n          color={context.shadow.color}\n          callback={(color: ColorResult) => changeColor(color)}\n        />\n      </GridItem>\n      <Text\n        gridColumn={{ base: \"2\", lg: \"3/-1\" }}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        fontSize=\".9rem\"\n      >\n        {VALUE_INFORMATION}\n      </Text>\n      {gridItems.map(({ label, callback, tooltip, value }, index) => (\n        <GridItem key={index} display=\"flex\" gridGap=\"1rem\" alignItems=\"center\">\n          <InputGroup>\n            <Tooltip label={tooltip}>\n              <InputLeftAddon\n                fontSize=\".9rem\"\n                justifyContent=\"center\"\n                children={label}\n              />\n            </Tooltip>\n            <NumberInput\n              w=\"100%\"\n              inputMode=\"numeric\"\n              placeholder=\"0\"\n              defaultValue={value}\n              onChange={(val) => callback(parseNumberInput(val))}\n            >\n              <NumberInputField textAlign=\"center\" p=\"2\" />\n            </NumberInput>\n          </InputGroup>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ShadowPicker;\n","export const X_AXIS_LABEL = \"X:\";\nexport const X_AXIS_TOOLTIP = \"Horizontial Offset\";\nexport const Y_AXIS_LABEL = \"Y:\";\nexport const Y_AXIS_TOOLTIP = \"Vertical Offset\";\nexport const BLUR_LABEL = \"B:\";\nexport const BLUR_TOOLTIP = \"Blur Radius\";\nexport const SPREAD_LABEL = \"S:\";\nexport const SPREAD_TOOLTIP = \"Spread Radius\";\nexport const VALUE_INFORMATION = \"💡 Each value is in px.\";\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Grid,\n} from \"@chakra-ui/react\";\nimport BackgroundPicker from \"components/BackgroundPicker\";\nimport DevicePicker from \"components/DevicePicker\";\nimport DimensionPicker from \"components/DimensionPicker\";\nimport ShadowPicker from \"components/ShadowPicker\";\nimport React from \"react\";\nimport {\n  BACKGROUND_TITLE,\n  DEVICE_TITLE,\n  DIMENSIONS_TITLE,\n  SHADOW_TITLE,\n} from \"./constants\";\n\ntype Picker = {\n  title: string;\n  component: JSX.Element;\n};\nconst Toolbox = (): JSX.Element => {\n  const pickers: Picker[] = [\n    {\n      title: BACKGROUND_TITLE,\n      component: <BackgroundPicker />,\n    },\n    {\n      title: SHADOW_TITLE,\n      component: <ShadowPicker />,\n    },\n    {\n      title: DIMENSIONS_TITLE,\n      component: <DimensionPicker />,\n    },\n    {\n      title: DEVICE_TITLE,\n      component: <DevicePicker />,\n    },\n  ];\n\n  return (\n    <Grid gridGap=\"5\">\n      <Accordion defaultIndex={[0]} allowMultiple>\n        {pickers.map((picker, index) => (\n          <AccordionItem key={index}>\n            <AccordionButton fontSize=\"1rem\">\n              <Box flex=\"1\" textAlign=\"left\">\n                <h2>{picker.title}</h2>\n              </Box>\n              <AccordionIcon />\n            </AccordionButton>\n            <AccordionPanel pb={4}>{picker.component}</AccordionPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </Grid>\n  );\n};\n\nexport default Toolbox;\n","export const BACKGROUND_TITLE = \"Background\";\nexport const SHADOW_TITLE = \"Shadow\";\nexport const DEVICE_TITLE = \"Device\";\nexport const DIMENSIONS_TITLE = \"Dimensions\";\n","import {\n  Box,\n  ChakraProvider,\n  ColorMode,\n  ColorModeScript,\n  extendTheme,\n  Fade,\n  Grid,\n  GridItem,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { css } from \"@emotion/react\";\nimport CookieNotice from \"components/CookieNotice\";\nimport Footer from \"components/Footer\";\nimport ImagePicker from \"components/ImagePicker\";\nimport ScreenshotCTA from \"components/ScreenshotCTA\";\nimport { BackgroundProvider } from \"contexts/Background\";\nimport { DeviceProvider } from \"contexts/Device\";\nimport { DimensionsProvider } from \"contexts/Dimensions\";\nimport { ImageProvider } from \"contexts/Image\";\nimport { ShadowProvider } from \"contexts/Shadow\";\nimport React from \"react\";\nimport { ClimbingBoxLoader } from \"react-spinners\";\nimport Header from \"./components/Header\";\nimport Foreground from \"./containers/Foreground\";\nimport Toolbox from \"./containers/Toolbox\";\n\nexport interface ChakraConfig {\n  initialColorMode: ColorMode;\n  useSystemColorMode: boolean;\n}\n\nconst config: ChakraConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n};\n\nconst theme = extendTheme({\n  config,\n  fonts: {\n    heading: \"Manrope\",\n    body: \"Manrope\",\n  },\n});\n\nconst Loading = () => {\n  const override = css`\n    background: transparent !important;\n  `;\n  return (\n    <Box\n      position=\"absolute\"\n      top=\"50%\"\n      left=\"50%\"\n      transform=\"translate(-50%,-50%)\"\n    >\n      <ClimbingBoxLoader\n        css={override}\n        color={useColorModeValue(\"#000\", \"#fff\")}\n        loading\n        size={15}\n      />\n    </Box>\n  );\n};\n\nconst App = () => {\n  const [showLoader, setShowLoader] = React.useState(true);\n  const screenshotRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    setTimeout(() => setShowLoader(false), 1000);\n  }, []);\n\n  return (\n    <>\n      <ColorModeScript />\n      <BackgroundProvider>\n        <DeviceProvider>\n          <ShadowProvider>\n            <ImageProvider>\n              <DimensionsProvider>\n                <ChakraProvider theme={theme}>\n                  <Fade unmountOnExit in={showLoader}>\n                    <Loading />\n                  </Fade>\n                  <Grid\n                    display={showLoader ? \"none\" : \"grid\"}\n                    gridTemplateRows=\"min-content\"\n                    minH=\"100vh\"\n                    p={{ base: 3, md: \"7\" }}\n                    fontSize=\"xl\"\n                  >\n                    <Header />\n                    <Grid\n                      gap=\"6rem\"\n                      justifyContent=\"center\"\n                      templateColumns={{\n                        base: \"1fr\",\n                        lg: \"1fr 1fr\",\n                        xl: \"450px 1fr\",\n                      }}\n                    >\n                      <GridItem display=\"grid\" gridGap=\"2\">\n                        <ImagePicker />\n                        <Toolbox />\n                        <ScreenshotCTA screenshotRef={screenshotRef} />\n                      </GridItem>\n                      <GridItem>\n                        <Foreground screenshotRef={screenshotRef} />\n                      </GridItem>\n                    </Grid>\n                    <Footer />\n                  </Grid>\n                  <CookieNotice />\n                </ChakraProvider>\n              </DimensionsProvider>\n            </ImageProvider>\n          </ShadowProvider>\n        </DeviceProvider>\n      </BackgroundProvider>\n    </>\n  );\n};\n\nexport default React.memo(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\";\nimport App from \"App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}